CXX = g++
# Add -MMD -MP flags to generate dependency files (.d)
CXXFLAGS = -Wall -O0 -g -std=c++17 -MMD -MP $(shell pkgconf --cflags sdl3)
LDFLAGS = $(shell pkgconf --libs sdl3)

# Get all .cpp files in the current directory (or list them)
SOURCES = $(wildcard *.cpp)
# Replace .cpp with .o to get object file names
OBJECTS = $(SOURCES:.cpp=.o)
# Get dependency file names
DEPS = $(OBJECTS:.o=.d)

OUT = renderer2D

all: $(OUT)

# Rule to link the executable from object files
$(OUT): $(OBJECTS)
	$(CXX) $(OBJECTS) -o $(OUT) $(LDFLAGS)

# Rule to compile .cpp files into .o files
# Also includes the generated dependency files automatically
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

clean:
	rm -f $(OUT) $(OBJECTS) $(DEPS) # Remove executable, objects, and dependency files

# Include the dependency files generated by -MMD.
# The minus sign means "don't complain if the file doesn't exist yet"
-include $(DEPS)

# Add .PHONY rule for targets that don't produce files with the same name
.PHONY: all clean
